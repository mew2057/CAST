/*================================================================================

    csmi/include/csm_types/struct_defs/bb/csm_bb_lv_delete_input.def

  Â© Copyright IBM Corporation 2015-2017. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/


/**
 * CSMI_COMMENT
 * @brief Specifies a logical volume to delete for @ref csm_bb_lv_delete.
 * @brief An input wrapper for @ref csm_bb_lv_delete.
 * 
 * Specifies a logical volume to delete and any metrics associated with.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csm_bb_lv_delete_input_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              1
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           0
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER(int64_t, allocation_id      ,  BASIC, ,   -1, ) /**< Unique identifier of an allocation. */
CSMI_STRUCT_MEMBER(int64_t, num_bytes_read     ,  BASIC, ,   -1, ) /**< Number of bytes read during the life of this partition.*/
CSMI_STRUCT_MEMBER(int64_t, num_bytes_written  ,  BASIC, ,   -1, ) /**< Number of bytes written during the life of this partition.*/
CSMI_STRUCT_MEMBER(char*  , logical_volume_name, STRING, , NULL, ) /**< Unique identifier for this ssd partition.*/
CSMI_STRUCT_MEMBER(char*  , node_name          , STRING, , NULL, ) /**< Name of the node where this logical volume is located.*/

CSMI_VERSION_END(b5f20193198e156ddf90cac0ecce9271)

CSMI_VERSION_START(CSM_VERSION_1_6_0)
CSMI_STRUCT_MEMBER(int64_t, num_reads ,  BASIC, ,   -1, ) /**< Number of reads during the life of this partition. - OPTIONAL - defaults to '-1' if not provided. values less than 0 will be inserted into csm database as NULL.*/
CSMI_STRUCT_MEMBER(int64_t, num_writes,  BASIC, ,   -1, ) /**< Number of writes during the life of this partition. - OPTIONAL - defaults to '-1' if not provided. values less than 0 will be inserted into csm database as NULL.*/
CSMI_VERSION_END(140d017d9cf2fa9cbad9c03b3afda4a7)

#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER
